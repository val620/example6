<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="boot.sixth.Mapper.UserMapper">

    <resultMap id="userMap" type="boot.sixth.Domain.User">
        <id property="userId" column="user_id" />
        <result property="userName" column="user_name" />
        <result property="password" column="password" />
        <result property="email" column="email" />

    </resultMap>

    <sql id="columns">
        user_id,user_name, password,email
    </sql>

    <select id="findUserName" resultType="String">
        SELECT user_name  FROM  user  WHERE user_id = #{userId}
    </select>

    <select id="findUserById" resultMap="userMap">
        SELECT  <include refid="columns" />  FROM  user  WHERE user_id = #{userId}
    </select>

    <resultMap id="userRolesMap" type="boot.sixth.Domain.User">
        <id property="userId" column="user_id" />
        <result property="userName" column="user_name" />
        <result property="email" column="email" />

        <!--<association property="role" javaType="boot.sixth.Domain.Role">-->
            <!--<id property="roleId" column="role_id" />-->
            <!--<result property="roleName" column="role_name" />-->
            <!--<result property="system" column="is_system" />-->
        <!--</association>-->

        <!--<association property="role" javaType="boot.sixth.Domain.Role" resultMap="roleMap" />-->
        <collection property="roles" ofType="boot.sixth.Domain.Role" resultMap="roleMap" />

    </resultMap>

    <resultMap id="roleMap" type="boot.sixth.Domain.Role">
        <id property="roleId" column="role_id" />
        <result property="roleName" column="role_name" />
        <result property="system" column="is_system" />
    </resultMap>

    <select id="findUserRoles"  resultMap="userRolesMap">
        select user.user_id,user.user_name,user.email,role.role_id,role.role_name,role.is_system from user,user_role,role
        where user.user_id=user_role.user_id and user_role.role_id=role.role_id and user.user_id=#{userId}
    </select>

    <select id="findUsers" parameterType="map" resultMap="userMap">
        SELECT  <include refid="columns" />  FROM  user  ORDER BY  user_id LIMIT #{offset}, #{pageSize};
    </select>

    <insert id="insertUser" parameterType="boot.sixth.Domain.User" >
        INSERT INTO
        user
        (user_id,user_name,email,password,locked,is_admin,is_verify_login_ip)
        VALUES
        (#{userId},#{userName},#{email}, #{password}, #{locked},#{isAdmin},#{isVerifyLoginIp})
    </insert>

    <update id="updateUser" parameterType="boot.sixth.Domain.User" >
        UPDATE
        user
        SET
        <if test="userName != null">user_name = #{userName}</if>
        WHERE
        user_id = #{userId}
    </update>

    <delete id="deleteUser" parameterType="java.lang.String" >
        DELETE FROM
        user
        WHERE
         user_id = #{userId}
    </delete>

</mapper>